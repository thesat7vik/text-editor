{"$message_type":"diagnostic","message":"unused `self` argument","code":{"code":"clippy::unused_self","explanation":null},"level":"warning","spans":[{"file_name":"src\\editor.rs","byte_start":212,"byte_end":217,"line_start":12,"line_end":12,"column_start":16,"column_end":21,"is_primary":true,"text":[{"text":"    pub fn run(&self) {","highlight_start":16,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider refactoring to an associated function","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_self","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`-W clippy::unused-self` implied by `-W clippy::pedantic`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to override `-W clippy::pedantic` add `#[allow(clippy::unused_self)]`","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused `self` argument\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\editor.rs:12:16\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn run(&self) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mhelp\u001b[0m\u001b[0m: consider refactoring to an associated function\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_self\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `-W clippy::unused-self` implied by `-W clippy::pedantic`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mhelp\u001b[0m\u001b[0m: to override `-W clippy::pedantic` add `#[allow(clippy::unused_self)]`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variables can be used directly in the `format!` string","code":{"code":"clippy::uninlined_format_args","explanation":null},"level":"warning","spans":[{"file_name":"src\\editor.rs","byte_start":455,"byte_end":503,"line_start":19,"line_end":19,"column_start":25,"column_end":73,"is_primary":true,"text":[{"text":"                        println!(\"Binary: {0:08b} ASCII: {0:#03} \\r\", b);","highlight_start":25,"highlight_end":73}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`-W clippy::uninlined-format-args` implied by `-W clippy::pedantic`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to override `-W clippy::pedantic` add `#[allow(clippy::uninlined_format_args)]`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"change this to","code":null,"level":"help","spans":[{"file_name":"src\\editor.rs","byte_start":474,"byte_end":475,"line_start":19,"line_end":19,"column_start":44,"column_end":45,"is_primary":true,"text":[{"text":"                        println!(\"Binary: {0:08b} ASCII: {0:#03} \\r\", b);","highlight_start":44,"highlight_end":45}],"label":null,"suggested_replacement":"b","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src\\editor.rs","byte_start":489,"byte_end":490,"line_start":19,"line_end":19,"column_start":59,"column_end":60,"is_primary":true,"text":[{"text":"                        println!(\"Binary: {0:08b} ASCII: {0:#03} \\r\", b);","highlight_start":59,"highlight_end":60}],"label":null,"suggested_replacement":"b","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src\\editor.rs","byte_start":499,"byte_end":502,"line_start":19,"line_end":19,"column_start":69,"column_end":72,"is_primary":true,"text":[{"text":"                        println!(\"Binary: {0:08b} ASCII: {0:#03} \\r\", b);","highlight_start":69,"highlight_end":72}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variables can be used directly in the `format!` string\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\editor.rs:19:25\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m19\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        println!(\"Binary: {0:08b} ASCII: {0:#03} \\r\", b);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `-W clippy::uninlined-format-args` implied by `-W clippy::pedantic`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mhelp\u001b[0m\u001b[0m: to override `-W clippy::pedantic` add `#[allow(clippy::uninlined_format_args)]`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: change this to\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m19\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m                        println!(\"Binary: {\u001b[0m\u001b[0m\u001b[38;5;9m0\u001b[0m\u001b[0m:08b} ASCII: {\u001b[0m\u001b[0m\u001b[38;5;9m0\u001b[0m\u001b[0m:#03} \\r\"\u001b[0m\u001b[0m\u001b[38;5;9m, b\u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m19\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m                        println!(\"Binary: {\u001b[0m\u001b[0m\u001b[38;5;10mb\u001b[0m\u001b[0m:08b} ASCII: {\u001b[0m\u001b[0m\u001b[38;5;10mb\u001b[0m\u001b[0m:#03} \\r\");\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variables can be used directly in the `format!` string","code":{"code":"clippy::uninlined_format_args","explanation":null},"level":"warning","spans":[{"file_name":"src\\editor.rs","byte_start":560,"byte_end":629,"line_start":21,"line_end":21,"column_start":25,"column_end":94,"is_primary":true,"text":[{"text":"                        println!(\"Binary: {0:08b} ASCII: {0:#03} Character: {1:#?} \\r\", b, c);","highlight_start":25,"highlight_end":94}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"change this to","code":null,"level":"help","spans":[{"file_name":"src\\editor.rs","byte_start":579,"byte_end":580,"line_start":21,"line_end":21,"column_start":44,"column_end":45,"is_primary":true,"text":[{"text":"                        println!(\"Binary: {0:08b} ASCII: {0:#03} Character: {1:#?} \\r\", b, c);","highlight_start":44,"highlight_end":45}],"label":null,"suggested_replacement":"b","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src\\editor.rs","byte_start":594,"byte_end":595,"line_start":21,"line_end":21,"column_start":59,"column_end":60,"is_primary":true,"text":[{"text":"                        println!(\"Binary: {0:08b} ASCII: {0:#03} Character: {1:#?} \\r\", b, c);","highlight_start":59,"highlight_end":60}],"label":null,"suggested_replacement":"b","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src\\editor.rs","byte_start":613,"byte_end":614,"line_start":21,"line_end":21,"column_start":78,"column_end":79,"is_primary":true,"text":[{"text":"                        println!(\"Binary: {0:08b} ASCII: {0:#03} Character: {1:#?} \\r\", b, c);","highlight_start":78,"highlight_end":79}],"label":null,"suggested_replacement":"c","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src\\editor.rs","byte_start":622,"byte_end":625,"line_start":21,"line_end":21,"column_start":87,"column_end":90,"is_primary":true,"text":[{"text":"                        println!(\"Binary: {0:08b} ASCII: {0:#03} Character: {1:#?} \\r\", b, c);","highlight_start":87,"highlight_end":90}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src\\editor.rs","byte_start":625,"byte_end":628,"line_start":21,"line_end":21,"column_start":90,"column_end":93,"is_primary":true,"text":[{"text":"                        println!(\"Binary: {0:08b} ASCII: {0:#03} Character: {1:#?} \\r\", b, c);","highlight_start":90,"highlight_end":93}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variables can be used directly in the `format!` string\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\editor.rs:21:25\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m21\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        println!(\"Binary: {0:08b} ASCII: {0:#03} Character: {1:#?} \\r\", b, c);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: change this to\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m21\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m                        println!(\"Binary: {\u001b[0m\u001b[0m\u001b[38;5;9m0\u001b[0m\u001b[0m:08b} ASCII: {\u001b[0m\u001b[0m\u001b[38;5;9m0\u001b[0m\u001b[0m:#03} Character: {\u001b[0m\u001b[0m\u001b[38;5;9m1\u001b[0m\u001b[0m:#?} \\r\"\u001b[0m\u001b[0m\u001b[38;5;9m, b, c\u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m21\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m                        println!(\"Binary: {\u001b[0m\u001b[0m\u001b[38;5;10mb\u001b[0m\u001b[0m:08b} ASCII: {\u001b[0m\u001b[0m\u001b[38;5;10mb\u001b[0m\u001b[0m:#03} Character: {\u001b[0m\u001b[0m\u001b[38;5;10mc\u001b[0m\u001b[0m:#?} \\r\");\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variables can be used directly in the `format!` string","code":{"code":"clippy::uninlined_format_args","explanation":null},"level":"warning","spans":[{"file_name":"src\\editor.rs","byte_start":792,"byte_end":818,"line_start":27,"line_end":27,"column_start":29,"column_end":55,"is_primary":true,"text":[{"text":"                Err(err) => println!(\"Error: {}\", err),","highlight_start":29,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"change this to","code":null,"level":"help","spans":[{"file_name":"src\\editor.rs","byte_start":810,"byte_end":810,"line_start":27,"line_end":27,"column_start":47,"column_end":47,"is_primary":true,"text":[{"text":"                Err(err) => println!(\"Error: {}\", err),","highlight_start":47,"highlight_end":47}],"label":null,"suggested_replacement":"err","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src\\editor.rs","byte_start":812,"byte_end":817,"line_start":27,"line_end":27,"column_start":49,"column_end":54,"is_primary":true,"text":[{"text":"                Err(err) => println!(\"Error: {}\", err),","highlight_start":49,"highlight_end":54}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variables can be used directly in the `format!` string\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\editor.rs:27:29\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m27\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                Err(err) => println!(\"Error: {}\", err),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: change this to\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m27\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m                Err(err) => println!(\"Error: {}\"\u001b[0m\u001b[0m\u001b[38;5;9m, err\u001b[0m\u001b[0m),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m27\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m                Err(err) => println!(\"Error: {\u001b[0m\u001b[0m\u001b[38;5;10merr\u001b[0m\u001b[0m}\"),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"4 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: 4 warnings emitted\u001b[0m\n\n"}
